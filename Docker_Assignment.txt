Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. type "docker -v" to check if it's installed.
   try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker images --help ---> This command shows all the avaialble options and commands to work with docker images
	docker ps --help ---> This command shows all the avaialble options and commands to work with docker containers

	Ans: sudo yum install docker

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
	docker pull nginx
	
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
	docker images
4. Find out the "Full" ImageId of the image that you pulled and write it below.
	62f816a209e6
5. Create a container of your image 
	 docker container run -d --name mycon2 -p 80:80 nginx
6. List all the running containers
	docker ps
7. List all the running and stopped containers
	docker ps -a
	
8. Find out the "Full" containerId of the container and write it below.
   a03c7580c3ff 

9. Find out how many image layers are used to build this image.
	docker inspect nginx

10. Get the Apache Tomcat 7 server image from the docker hub.
	docker pull tomcat:7.0

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
	docker container run -d tomcat:7.0

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
	docker inspect <container id>
	
13. Which Port it is using?
	docker container port <container id>(Port is 8080)
	
14. Try to access the Tomcat's home page from your machine/vm.
	curl http://localhost:8080
15. What is the disk size of Apache Tomcat image?
	docker system df -v
	
16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
	docker inspect tomcat:7.0
	
17. Find out which port is exposed for tomcat?
	docker container port <container id>(Port is 8080)
	
18. Run multiple conntainers of tomcat on different port and access it's home page.
	did this exercise using docker container run -d tomcat 7:0
	
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
	docker pull ubuntu:16.04
	docker pull ubuntu:18.04
	
20. Run the container of ubuntu in attached mode.
	docker run -t ubuntu:16:04
	
21. Run the container of another ubuntu in detached mode.
	docker run -d ubuntu:18.04
	
22. Check how many ubuntu containers are running and stopped
	docker ps -a | grep ubuntu

23. Is the tomcat container running? If no, start one.
	yes

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
	docker logs <container-id>
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
	docker container run -it ubuntu:16.04
26. Login as root user in ubuntu container
	sudo su
27. Create a file with any name in root directory
	>hello
28. Install software of your choice in ubuntu container using "apt-get install"
	apt-get install python
29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
	Back to host machine
30. Check if the ubuntu container is running.
	container is not running
	
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
	created
32. Login as a root user
	done

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
	no
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
	Done it
35. Create an Image out of the existing container.
	docker container commit <container_name>
36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
docker container create <image_name>
docker container start -i <container_name>

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
docker kill `docker ps | grep tomcat`
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
	Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
		docker run -it ubuntu:16.04
		<inside the container>
			sudo yum update
		    sudo yum install nginx
		<outside container>
		docker commit <container name>
		docker container run -v /root/tomcat/index.html:/var/www/html/index.nginx-debian.html -d <image-name>
		curl http://container-ip:8080/
		
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q

write atleast 1 command using each option above and prove their concepts as described in the --help.
docker images -a shows all images
docker images -q lists only the image ids
docker images -f does not work~~~

40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
2. -f
3. -q
4. -n
5. -l
6. -s

write atleast 1 command using each option above and prove their concepts as described in the --help.
docker ps -a shows all containers running or not
docker ps -f name=mycon shows the container with name mycon
docker ps -q list the container id
docker ps -n 2 lists the last 2 containers
docker ps -l the latest containers
docker ps -s shows the size of all containers that are running

41. Type below command:-
	docker --help

you will various sections of commands apart from options like "Managemnet Commands" and "Commands".


Write some texts below describing the use of "Management Commands".

Management commands helps managing containers, network, volume, configurations and docker swarm

Use each command mentioned below and prove its concepts as described in the --help desription. write what you have understood from the output of the command after its successful execution.
1. cp : Copies from host to container system
	docker cp ./index.html f2f830c58002:/var
	
2. create: creates container
	docker create ubuntu:16.04
	
3. export: exports filesystem as tar file
	docker export -o <container id>

4. history: shows history of particular image
	docker history <imagename>
	
5. info: shows info about docker
	 docker info
	 
6. login:
	docker login -u username -p password
	
7. logout
	docker logout
	
8. rename
	docker container rename <container_name> <new_container_name>
	
9. save
	docker save <image-name>
	
10. stats
docker stats

11. top
docker top

42. Kill all running container in one liner command.
	docker kill `docker ps -q`
	
43. Delete all images in one liner command.
	docker rmi `docker images -q`
	
44. Create a simple Dockerfile, build it and run it.
	vi Dockerfile
	From tomcat:7.0
	RUN /usr/local/tomcat/webapps/
45. Create one or more Dockerfile that demostrate the following commands in Dockerfile (Write a PoC for each in one or more Dockerfile)
	1. USER
	2. RUN
	3. ENV
	4. CMD
	5. RUN
	6. ENTRYPOINT
	7. EXPOSE
	8. VOLUME
	
46. Dockerhub:-
	Find a application you care about on docker hub.
	Launch the container.
	Install another application in it.
	Save (commit) the image.
	
