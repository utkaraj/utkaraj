important command and option to learn unix commands:-
1. man <-- Command
	Example:-
		man ls

2. --help <-- Option
	Example:-
		ls --help

NOTE:- Always use "man" command before using any unix commands and read about it and its options and how to use it.

 
Assignments:-

1. List the contents of a directory and their attributes
	ls -l

2. Long list the content with file, directory ownership, permissions,sizes, etc...
	ls -al
	
3. Display the size of the file in human readable format
	ls -lh
	

4. Show all files and folders including hidden one
	ls -a

5. list directories recursively
	ls -R

6. Sort the files by size with largest at the top
	ls -S
	
7. Sort the files by last time modified displaying the newest first.
	ls -lt
	
8. Diplay the location of a program/command, where it is installed.
	which filename
	
9. Which command is used to switch directory from one to another
	cd /path
	
10. List all the environment variables set for the current shell environment
	env

11. Did you notice something in the output of "env" command?
	yes
	
12. Which command is used to print the text or any variables value in the Console/Terminal?
	echo

13. Print the value of the env variable "PATH" on the console
	echo $PATH
	
14. Is linux a case-sensitive operating system?
	yes
	
15. Is, "Ls" same as "ls"?
	No.
	
16. Display your currently logged in user
	id -un or whoami

17. how do you change the currrently logged in user to another user?
	su username

18. Which command is used to leave a shell environment that you are currently logged in to?
	exit

19. How do you reboot the system?
	shutdown -r

20. How do you shutdown the system?
	shutdown -P		 

21. Display all the major running processes in the system
	top, ps -A, ps -e 
	
22. Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
	Following is the explanation of fields of top command
	PID- Process ID
	USER- User under which the process is running
	PR- Priority of running process
	NI- Nice value(user based priority value, more the value less the priority & vice versa)
	VIRT- Virtual memory used by process
	RES- Physical memory used by process
	SHR- Shared memory used by process
	S- Current state of the process
	%CPU- %CPU used by process
	%MEM- %RAM used by process
	TIME- Total time of process running for
	COMMAND- Name of process

23. Display the name of the system kernel
	uname -s

24. display the kernel release number
	uname -r

25. display teh machine type of the current kernel
	uname -p
	
26. Display the name of the operating system that the kernel is running on
	uname -o

27. Display all info that uname command can show.
	uname -a

28. Display the name of directory that you are currently pointing to
	pwd

29. change the current directory to another directory that you have in your system.
	cd directory path

30. Go up one directory
	cd ..
	
31. Return to last directory
	cd -

32. change the current directory to home(logged in user's) directory
	cd ~

33. How to check all the command used from the prompt (Command History)
	history

34. In which file the history of commands are stored in?
	.bash_history

35. How many lines of history does the system keep and from where you can change it?
	By default system keeps 500 lines.
	To change it, change the value of HISTSIZE Variable in .bash_profile

36. How can you modify bash's history behaviour
	make appropriate changes in .bash_history file

37. Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.
	!HistoryNumberOfCommand

NOTE:- TAB key is your friend when it comes to command completion and having long file and directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)


38. What are the different types of shell and where are they used and how do we use them?
	The Bourne Shell- Original unix shell. Preferred for programming due to compactness and speed.
	The C Shell- UNIX enhancement. Incorporates features for interactive use and convenient programming features.
	The Korn Shell- Superset of Bourne shell and has all the features of c as well as bourne shell. Faster then C shell.
	The GNU-Bourne Again Shell- Incorporates useful features from bourne and C shell.	

39. What is the difference between login shell and non-login shell?
	Login shell is the first process executes under our userId on successful login.
	Non Login shell is started by a program without a login by just passing the name of the shell executable.
	
40. How do we start login shell and non-login shell?
	
41. What happens when you start a login shell (which files are read and used and Why)?

42. What happens when you start a non-login shell (Which files are read and used and Why)?

39. What are Shell Configuration Files, why do we need it?
	Shell configuration files intialize and configure a shell upon login and perform cleanup operations 
	upon logout. They are needed to set environment variables, command shell options etc.

40. Explain the Order of file usage from the system/user's home directory when user logs in to the System.
	

41. What are Shell Variables, list major shell variables and what do they represent?
	It is a variable available only to the current shell. Some of the system defined variables are already set
	when we login. Some of them are:-
	$HOME= Absolute pathname to home directory
	$USER= Username
	$SHELL= Absolute pathname to login shell.
	
42. How we see all our env variables?
	printenv

43. How we see all env variables in alphabical order?
	printenv | sort or printenv | sort -r(reverse order)
 
44. What Format does the env var and its values are stored?
	
45. How do you create your own varible?
	VARIABLE_NAME=value
	(use "" if string for ex:- MESSAGE="Hello")

46. How do you start a new bash shell?
	#!/bin/bash

47. Difference between Local/Shell variables to Global Variable
	Local variables are used within a shell only. Global variables can be used throughout the system.

48. Making a variable accessible from other shell in the system.
	Can run the script containing the variable in the onw in which we want to use it.

49. Show the real life use case of exporting a variable
	
50. Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"

51. What is Globbing? Explain in depth with examples?
	Globbing is the operation which recognise wildcard patterns and do file path expansion.
	Wilcard patterns are string containing characters like '?','!' etc. It performs action on more than 
	one file having such patterns or to find some phrase or part in a file.
	For ex:- ls office* will give all the files having similar name.

52. List all entries with extension ".sh"
	
53. List all entries with numbers in it.

54. List all entries that starts with a character and ends with a number

55. List all entries that name length more than 5 characters

56. What is Quoting? and Why do we need it?

57. Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.

58. How do you find a particular files/directories based on a particular search criteria?
	HINT:- look for commands -> locate, find and whereis

59. Write major difference between locate, find and whereis?

60. How Globbing is different from locate, find and whereis?

61. Explain the Linux File System.

62. Explain absolute and Relative Paths

63. What are the different ways of creating a File in linux System? Write an example of each and the difference between them.

64. In how many ways we can delete the files from linux system? write an example of each and teh difference between them.

65. Archiving files using linux command, write a command to archive set of files from linux commands.

66. Extract the archived files from the above step.